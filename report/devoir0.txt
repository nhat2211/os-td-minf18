2.2. 
How is this first kernel thread created?
Answer:
Step 1:Call into Start method.
Step 2: In the Start method call into StackAllocate method
Step 3: In the StackAllocate mehod that we init a stack with size of long
step 4: Register stack by valgrind_id.
Step 5: check constant value to work in range (low addresses to high addresses or opposite)
Step 6: SetupThreadState that it is called be StartupPCState of machine.
Step 7: Register InitialPCState of machine state by func with long value.
Step 8: Register InitialArgState of machine state by arg with long value.
Step 9: Register WhenDonePCState of machine state by ThreadFinish method with long value.  

Where does its stack and its registers come from?
Answer:
It comes from StackAllocate (func, arg) method.

What is the (future) role of the data structure allocated by the instruction:
Answer:
HOST_SNAKE: HP stack works from low addresses to high addresses;HP requires 64-byte frame marker
#else: other archs stack works from high addresses to low addresses
HOST_SPARC:SPARC stack must contains at least 1 activation record to start with.
HOST_PPC
HOST_i386
Why is it necessary to call the Start method for the next kernel threads? (focus into threads/thread.h and threads/thread.cc)
Answer:
